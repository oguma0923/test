・作業内容
(a)git:11/26~11/28の作業の修正
(b)shell:繰り返し処理を利用したshell scriptの作成
(c)shell:条件分岐と繰り返し処理を組み合わせたshell scriptの作成
(d)shell:配列を利用したshell scriptの作成
(e)shell:パラメータ（コマンドライン引数）を渡し、それらを出力するshell scriptの作成
(f)shell:環境変数の設定、出力を行うshell scriptの作成
(g)shell:標準入力をechoするshell scriptの作成
(h)shell:標準出力をファイルにリダイレクトするshell scriptの作成
(i)shell:標準エラー出力をファイルにリダイレクトするshell scriptの作成
(j)shell:コマンドライン引数に"ok"を渡すと標準出力をok.txtヘリダイレクト、"ng"を渡すと標準エラー出力をng.txtヘリダイレクトするshell scriptの作成
(k)shell:パイプを利用したshell scriptの作成
(l)ログ:ログの作成

・見積もり時間
(a)0.5h
(b)0.3h
(c)0.4h
(d)0.4h
(e)0.4h
(f)0.5h
(g)0.5h
(h)0.5h
(i)0.5h
(j)0.4h
(k)0.7h
(l)0.3h

・実績時間
(a)0.5h
(b)0.8h
(c)0.6h
(d)1h
(e)0.3h
(f)0.2h
(g)0.4h
(h)0.4h
(i)0.2h
(j)0.4h
(k)0.5h
(l)0.4h

・週間の目標稼働時間
4h

・1日の実績時間
5.9h

・質問


・感想
エラーが発生しても、エラーをコピーして検索すれば解決方法がすぐに見つかるのでかなり作業はしやすかった。
変数を表示させるときに$をつけるかつけないか、括弧でかこむ必要があるかなど、pythonとは異なる扱いをしな
ければいけないのが大変だと感じた。
パイプ処理はテキストを抜き出してから並べ替えることができるので、汎用性が高くいろいろなことに使えそうだ
と思った。
作業の見積もり時間と実際の作業時間にかなり差が出てしまったので、今後は調査が必要な部分の見積もり時間を
増やし、コーディング作業が大半を占める作業の見積もり時間を据え置くか少し短くするという方針にしていく。

・その他
学んだこと
パイプ処理でteeを使うことで、途中の出力の記録を取りながら他の処理を並行して行うことができる。
環境変数は通常の変数と異なり、他のプロセスとも共有ができる。
