・作業内容
(a)ruby:classの調査と利用例
(b)ruby:moduleの調査と利用例
(c)ruby:例外処理の調査と利用例
(d)ruby:ファイルやディレクトリを扱うクラスの利用例
(e)ruby:日付や時間を扱うクラスの調査とまとめ
(f)ログ:ログの作成

・見積もり時間
(a)1h
(b)1.5h
(c)1.5h
(d)1h
(e)1h
(f)0.5h

・実績時間
(a)1.1h
(b)1.5h
(c)2h
(d)1.3h
(e)0.6h
(f)0.5h

・週間の目標稼働時間
7h

・1日の実績時間
7h

・質問


・感想
TimeクラスやFileクラスなどコマンドラインツールの作成に有用そうなクラスを学習することができたので、
これらを有効に活用して簡潔で効率的なプログラムを書けるようにしたいと思った。
名前空間という言葉がどういうものなのかを知らなかったが、moduleによって名前空間を導入することにより
複数の同じ名前のメソッドを識別して利用することができるということを知ることができた。

・その他
学んだこと
raiseによって例外処理を強制的に呼び出すことができる。
アクセス修飾子によって、アクセス元を制限できる。
Rubyはすべてがオブジェクトと言われるが、すべての「データ」がオブジェクトといったほうが正しい。
メソッドやブロックそのものはデータではないのでオブジェクトとは言えないが、Methodオブジェクトや
Procオブジェクトとしてデータ化することができる。
